{%- liquid
  assign text_color_brightness = section.settings.color_text | color_brightness

  assign sizes = '100vw'

  assign grid = section.settings.grid
  assign grid_mobile = 1

  if section.settings.enable_carousel_mobile
    assign mobile_sizes = 'calc(100vw - 96px)'
  else
    assign mobile_sizes = 'calc(100vw - 36px)'
  endif

  case grid
    when 1
      assign sizes = '(min-width: 1600px) calc(80vw - 60px), (min-width: 981px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 36px), ' | append: mobile_sizes
    when 2
      assign sizes = '(min-width: 1600px) calc((80vw - 90px) / 2), (min-width: 981px) calc((100vw - 90px) / 2), (min-width: 768px) calc((100vw - 66px) / 2), ' | append: mobile_sizes
    when 3
      assign sizes = '(min-width: 1600px) calc((80vw - 120px) / 3), (min-width: 981px) calc((100vw - 120px) / 3), (min-width: 768px) calc((100vw - 66px) / 3), ' | append: mobile_sizes
    when 4
      assign sizes = '(min-width: 1600px) calc((80vw - 105px) / 4), (min-width: 1081px) calc((100vw - 105px) / 4), (min-width: 981px) calc((100vw - 90px) / 4), (min-width: 768px) calc((100vw - 51px) / 4), ' | append: mobile_sizes
  endcase

  assign show_link = false
  if section.settings.link_title != blank and section.settings.link != blank
    assign show_link = true
  endif

  comment
    Determine if the items-scroll component should only show counter on mobile
  endcomment
  assign show_counter_for_all_on_mobile = false
  if section.blocks.size > 1
    for block in section.blocks
      assign number_of_pages_on_mobile = section.blocks.size | divided_by: grid_mobile
      if number_of_pages_on_mobile > 6
        assign show_counter_for_all_on_mobile = true
        break
      endif
    endfor
  endif
-%}

<style>
  .section--{{ section.id }} .collection-list__content-heading,
  .section--{{ section.id }} .collection-list__content-count,
  .section--{{ section.id }} .collection-list__content-text,
  .section--{{ section.id }} .collection-list__content-link:not(.c-btn--primary):not(.c-btn--mono) {
      color: {{ section.settings.color_text }}
  }
  {% if section.settings.color_default_heading %}
      .section--{{ section.id }} .collection-list__content-heading {
        color: {{ settings.color_headings }};
      }
  {% endif %}
  {% unless section.settings.color_default_border %}
      body[data-heading-border=true] .section--{{ section.id }} .collection-list__content-heading:after {
        background: {{ section.settings.color_text }};
      }
  {% endunless %}
  .section--{{ section.id }} .collection-list__content-link.c-btn--hollow {
      box-shadow: inset 0 0 0 1px {{ section.settings.color_text }};
  }
  .section--{{ section.id }} .c-btn--mono {
      color: {% if text_color_brightness < 125 %}white{% else %}black{% endif %};
      background: {{ section.settings.color_text }};
  }
  .section--{{ section.id }} .c-btn--mono:hover {
      {% if text_color_brightness < 125 %}
          background: {{ section.settings.color_text | color_lighten: 10 }};
      {% else %}
          background: {{ section.settings.color_text | color_darken: 10 }};
      {% endif %};
  }
  .section--{{ section.id }} .collection-list__content-link.c-btn--hollow:hover {
      {%- liquid
          assign text_brightness = section.settings.color_text | color_brightness
          if text_brightness > 125
              assign text_contrast_color = '#000'
          else
              assign text_contrast_color = '#fff'
          endif
      -%}
      color: {{ text_contrast_color }};
      background: {{ section.settings.color_text }};
  }
  .section--{{ section.id }} .collection-list__overlay:before {
      background: {{ section.settings.color_overlay }};
      {% if section.settings.color_overlay_strength == 100 %}
          opacity: 1;
      {% else %}
          opacity: .{{ section.settings.color_overlay_strength }};
      {% endif %}
  }
</style>

<section
  class="
    section
    section--padded
    section--{{ section.id }}
    section--mb-0
    section--collections-list
    {% if show_link %} section--has-link{% endif %}
    {% if section.settings.divider == true %}section--divider{% endif %}
    js-featured-collections-section
  "
  data-section-id="{{ section.id }}"
  data-section-type="featured-collections"
  style="
    --space-top: {{ section.settings.padding_top }}px;
    --space-bottom: {{ section.settings.padding_bottom }}px
  "
>
  <div class="container container--{{ section.settings.section_width }} {% if section.settings.enable_carousel_mobile %}u-ph+@mob{% endif %}">
    {% if section.settings.title != blank or section.settings.desc != blank %}
      <div class="section__title {% if section.settings.heading_alignment == 'center' %}section__title--center{% endif %} {% if section.settings.enable_carousel_mobile == false %}u-ph0@mob{% endif %}{% unless section.settings.desc == blank %} section__title--desc{% endunless %}">
        {% unless section.settings.title == blank %}
          <h2 class="section__title-text">{{ section.settings.title | escape }}</h2>
        {% endunless %}
        {% unless section.settings.desc == blank %}
          <div class="section__title-desc rte">{{ section.settings.desc }}</div>
        {% endunless %}
      </div>
    {% endif %}
  </div>

  {%- liquid
    comment
      Items scroll logic
    endcomment
    assign grid_tag = 'div'
    assign grid_tag_attributes = ''
    if section.settings.enable_carousel_desktop or section.settings.enable_carousel_mobile
      assign grid_tag = 'items-scroll'
      comment
        Can choose from 'mob', 'phab', 'tab', 'desk'
        Widths need to be in sync with the ones in items-scroll.js
      endcomment
      assign breakpoint = 'tab'
      if section.settings.enable_carousel_mobile and section.settings.enable_carousel_desktop == false
        assign grid_tag_attributes = 'breakpoint-max="' | append: breakpoint | append: '"'
        assign mq_bound = 'max'
        assign mq_adjustment = 0
      endif
      if section.settings.enable_carousel_mobile == false and section.settings.enable_carousel_desktop
        assign grid_tag_attributes = 'breakpoint-min="' | append: breakpoint | append: '"'
        assign mq_bound = 'min'
        assign mq_adjustment = 1
      endif
    endif
  -%}

  {%- if grid_tag == 'items-scroll' -%}
    {%- capture selector -%}
            .section--{{ section.id }} [data-items] {
                display: flex;
                flex-wrap: nowrap;
                width: 100%;
                overflow-x: hidden;
            }

            .section--{{ section.id }} [data-items] > * {
                flex-shrink: 0;
                flex-grow: 0;
            }
        {%- endcapture -%}
    <style>
      {%- if mq_bound -%}
          {%- case breakpoint -%}
              {%- when 'mob' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 480 | plus: mq_adjustment }}px) {
                      {{ selector }}
                  }
              {%- when 'phab' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 560 | plus: mq_adjustment }}px) {
                      {{ selector }}
                  }
              {%- when 'tab' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 768 | plus: mq_adjustment }}px) {
                      {{ selector }}
                  }
              {%- when 'desk' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 980 | plus: mq_adjustment }}px) {
                      {{ selector }}
                  }
          {%- endcase -%}
      {%- else -%}
          {{ selector }}
      {%- endif -%}
    </style>
  {%- endif -%}

  {%- liquid
    assign items_overflow = false
    assign block_count = section.blocks.size

    if section.settings.enable_carousel_mobile and section.settings.enable_carousel_desktop
      if block_count > grid
        assign items_overflow = true
      elsif block_count > grid_mobile
        assign items_overflow_max = breakpoint
      endif
    elsif section.settings.enable_carousel_mobile and section.settings.enable_carousel_desktop == false
      if block_count > grid_mobile
        assign items_overflow_max = breakpoint
      endif
    else
      if block_count > grid
        assign items_overflow_min = breakpoint
      endif
    endif
  -%}

  {%- liquid
    case section.settings.spacing
      when 0
        assign spacing_px = 0
      when 1
        assign spacing_px = 12
      when 2
        assign spacing_px = 24
      when 3
        assign spacing_px = 30
      when 4
        assign spacing_px = 48
      when 5
        assign spacing_px = 60
    endcase
  -%}
  <div class="container container--{{ section.settings.section_width }}{% if section.settings.enable_carousel_mobile %} u-ph0@mob{% endif %}{% if section.settings.section_width == 'full' %} container--p-0{% endif %}">
    <{{ grid_tag }}
      {% unless section.settings.image_ratio == 'natural' %}
        class="ratio-navigation"
      {% endunless %}
      {% if items_overflow %}
        items-overflow
      {% elsif items_overflow_max %}
        items-overflow-max="{{ items_overflow_max }}"
      {% elsif items_overflow_min %}
        items-overflow-min="{{ items_overflow_min }}"
      {% endif %}
      {{ grid_tag_attributes }}
      {% if show_counter_for_all_on_mobile %}
        mobile-counter-only
      {% endif %}
      image-container-ratio="{{ section.settings.image_ratio }}"
    >
      <div
        class="
          grid-layout
          grid-layout--{{ grid }}
          grid-layout--{{ grid_mobile }}@mob
          {% if grid > block_count %}
          grid-layout--align-center
          {% endif %}
          grid-spacing--{{ spacing_px }}
          grid-layout--uniform-rows
        "
        data-items
      >
        {%- for block in section.blocks -%}
          {%- if block.type == 'collection' -%}
            {%- assign collection = collections[block.settings.collection] -%}
            {%- capture current_block -%}{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}

            {% render 'collection-grid-item',
              collection: collection,
              sizes: sizes,
              ratio: section.settings.image_ratio,
              title_size: section.settings.title_size,
              alignment: section.settings.alignment,
              text_alignment: section.settings.text_alignment,
              button_style: section.settings.button_style,
              visibility_heading: section.settings.visibility_heading,
              visibility_border: section.settings.visibility_border,
              visibility_count: section.settings.visibility_count,
              visibility_description: section.settings.visibility_description,
              visibility_button: section.settings.visibility_button,
              hover_options: section.settings.hover_options,
              button_label: block.settings.button_label,
              heading: block.settings.heading,
              description: block.settings.description,
              link: block.settings.link,
              replacement_image: block.settings.image,
              video: block.settings.video,
              current_block: current_block
            %}
          {%- elsif block.type == 'text' -%}
            <div class="collection-list__item_wrap">
              {%- liquid
                assign block_text_color_brightness = block.settings.color_text | color_brightness
                assign pattern_size = block.settings.pattern_size | times: 5
              -%}

              <style>
                {%- if block.settings.pattern_style != 'none' -%}
                    .collection-list__item--{{ block.id }}::before {
                        content: "";
                        position: absolute;
                        top: 0;
                        left: 0;
                        right: 0;
                        width: 100%;
                        height: 100%;
                        mask-image: {% render 'hero-patterns', pattern: block.settings.pattern_style %};
                        -webkit-mask-image: {% render 'hero-patterns', pattern: block.settings.pattern_style %};
                        background-color: {{ block.settings.color_pattern }};
                        -webkit-mask-size: {{ pattern_size }}px;
                        -webkit-mask-position: center;
                        {% if block.settings.pattern_opacity == 100 %}
                            opacity: 1;
                        {% elsif block.settings.pattern_opacity < 10 %}
                            opacity: .0{{ block.settings.pattern_opacity }};
                        {% else %}
                            opacity: .{{ block.settings.pattern_opacity }};
                        {% endif %}
                    }
                    @media screen and (max-width: 767px) {
                        .collection-list__item--{{ block.id }}::before {
                            -webkit-mask-size: {{ pattern_size | times: 0.8 }}px;
                        }
                    }
                {% endif %}

                .collection-list__item--{{ block.id }} {
                    background-color: {{ block.settings.color_bg }};
                }
                .collection-list__item--{{ block.id }} .collection-list__content-heading,
                .collection-list__item--{{ block.id }} .collection-list__content-text,
                .collection-list__item--{{ block.id }} .collection-list__content-text a,
                .collection-list__item--{{ block.id }} .collection-list__content-link.collection-list__content-link.link,
                .collection-list__item--{{ block.id }} .collection-list__content-link.collection-list__content-link.link--underline,
                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow.c-btn--hollow {
                    color: {{ block.settings.color_text }};
                }
                {% if block.settings.color_default_heading %}
                    .collection-list__item--{{ block.id }} .collection-list__content-heading {
                        color: {{ settings.color_headings }};
                    }
                {% endif %}
                {% unless block.settings.color_default_border %}
                    body[data-heading-border=true] .collection-list__item--{{ block.id }} .collection-list__content-heading:after {
                        background: {{ block.settings.color_text }};
                    }
                {% endunless %}

                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow {
                    box-shadow: inset 0 0 0 1px {{ block.settings.color_text }};
                }
                .collection-list__item--{{ block.id }} .c-btn--mono {
                    color: {% if block_text_color_brightness < 125 %}white{% else %}black{% endif %};
                    background: {{ block.settings.color_text }};
                }
                .collection-list__item--{{ block.id }} .c-btn--mono:hover {
                    {% if block_text_color_brightness < 125 %}
                        background: {{ block.settings.color_text | color_lighten: 10 }};
                    {% else %}
                        background: {{ block.settings.color_text | color_darken: 10 }};
                    {% endif %};
                }
                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow:hover {
                    color: {% if block_text_color_brightness < 125 %}white{% else %}black{% endif %};
                    background: {{ block.settings.color_text }};
                }
              </style>

              <div class="collection-list__item collection-list__item--text collection-list__item--{{ block.id }}">
                <div
                  class="o-ratio o-ratio--{{ section.settings.image_ratio }}"
                  {% if section.settings.image_ratio == 'natural' %}
                    style="padding-bottom:100%;"
                  {% endif %}
                >
                  <div class="o-ratio__content">
                    {%- liquid
                      assign vertical_alignment = 'u-flex--middle'
                      if block.settings.alignment contains 'top'
                        assign vertical_alignment = 'u-flex--top'
                      elsif block.settings.alignment contains 'middle'
                        assign vertical_alignment = 'u-flex--middle'
                      elsif block.settings.alignment contains 'bottom'
                        assign vertical_alignment = 'u-flex--bottom'
                      endif

                      assign horizontal_alignment = 'u-flex--center'
                      if block.settings.alignment contains 'left'
                        assign horizontal_alignment = 'u-flex--left'
                      elsif block.settings.alignment contains 'center'
                        assign horizontal_alignment = 'u-flex--center'
                      elsif block.settings.alignment contains 'right'
                        assign horizontal_alignment = 'u-flex--end'
                      endif
                    -%}

                    <div
                      class="
                        collection-list__content
                        collection-list__content--{{ block.settings.text_alignment }}
                        collection-list__content--{{ section.settings.title_size }}
                        u-flex
                        {{ horizontal_alignment }}
                        {{ vertical_alignment }}
                      "
                    >
                      <div class="collection-list__content-wrapper">
                        {%- if block.settings.heading != blank -%}
                          <h3 class="collection-list__content-heading{% unless section.settings.visibility_border %} collection-list__content-heading--no-border{% endunless %}">
                            {{ block.settings.heading | escape }}
                          </h3>
                        {%- endif -%}
                        {%- if block.settings.text != blank -%}
                          <div class="collection-list__content-text rte">{{ block.settings.text }}</div>
                        {%- endif -%}
                        {%- if block.settings.link_text != blank -%}
                          <a
                            href="{{ block.settings.link }}"
                            class="collection-list__content-link {{ block.settings.button_style }}"
                          >
                            {{- block.settings.link_text | escape -}}
                          </a>
                        {%- endif -%}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {%- else -%}
            {%- if block.settings.link != blank -%}
              <a href="{{ block.settings.link }}" class="collection-list__link">
            {%- endif %}

            <div class="collection-list__item_wrap">
              {%- liquid
                assign block_text_color_brightness = block.settings.color_text | color_brightness
              -%}

              <style>
                .collection-list__item--{{ block.id }} .collection-list__overlay:before {
                    background: {{ block.settings.color_overlay }};
                    {% if block.settings.color_overlay_strength == 100 %}
                        opacity: 1;
                    {% else %}
                        opacity: .{{ block.settings.color_overlay_strength }};
                    {% endif %}
                }
                .collection-list__item--{{ block.id }} .collection-list__content-heading,
                .collection-list__item--{{ block.id }} .collection-list__content-text,
                .collection-list__item--{{ block.id }} .collection-list__content-text a,
                .collection-list__item--{{ block.id }} .collection-list__content-link.collection-list__content-link.link,
                .collection-list__item--{{ block.id }} .collection-list__content-link.collection-list__content-link.link--underline,
                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow.c-btn--hollow {
                    color: {{ block.settings.color_text }};
                }
                {% if block.settings.color_default_heading %}
                    .collection-list__item--{{ block.id }} .collection-list__content-heading {
                        color: {{ settings.color_headings }};
                    }
                {% endif %}
                {% unless block.settings.color_default_border %}
                    body[data-heading-border=true] .collection-list__item--{{ block.id }} .collection-list__content-heading:after {
                        background: {{ block.settings.color_text }};
                    }
                {% endunless %}

                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow {
                    box-shadow: inset 0 0 0 1px {{ block.settings.color_text }};
                }
                .collection-list__item--{{ block.id }} .c-btn--mono {
                    color: {% if block_text_color_brightness < 125 %}white{% else %}black{% endif %};
                    background: {{ block.settings.color_text }};
                }
                .collection-list__item--{{ block.id }} .c-btn--mono:hover {
                    {% if block_text_color_brightness < 125 %}
                        background: {{ block.settings.color_text | color_lighten: 10 }};
                    {% else %}
                        background: {{ block.settings.color_text | color_darken: 10 }};
                    {% endif %};
                }
                .collection-list__item--{{ block.id }} .collection-list__content-link.c-btn--hollow:hover {
                    color: {% if block_text_color_brightness < 125 %}white{% else %}black{% endif %};
                    background: {{ block.settings.color_text }};
                }
              </style>

              <div class="collection-list__item collection-list__item--media collection-list__item--{{ block.id }}">
                <div
                  class="o-ratio o-ratio--{{ section.settings.image_ratio }}"
                  {% if section.settings.image_ratio == 'natural' %}
                    style="padding-bottom:100%;"
                  {% endif %}
                >
                  <div class="o-ratio__content">
                    <div class="collection-list__media">
                      {% if block.settings.video %}
                        {% render 'lazy-video', video: block.settings.video, class: 'collection-list__video' %}

                      {% elsif block.settings.image %}
                        <img
                          class="collection-list__bg"
                          src="{{ block.settings.image | image_url: '300x' }}"
                          srcset="{% render 'bgset', image: block.settings.image %}"
                          sizes="{{ sizes }}"
                          width="300"
                          height="{{ 300 | divided_by: block.settings.image.aspect_ratio | round }}"
                          alt="{{ block.settings.image.alt }}"
                          loading="lazy"
                          style="object-position:{{ block.settings.image.presentation.focal_point }}"
                        >
                      {% else %}
                        {{ 'lifestyle-1' | placeholder_svg_tag: 'collection-list__bg placeholder-svg' }}
                      {% endif %}
                    </div>

                    <div class="collection-list__overlay u-bg-overlay"></div>

                    {%- liquid
                      assign vertical_alignment = 'u-flex--middle'
                      if block.settings.alignment contains 'top'
                        assign vertical_alignment = 'u-flex--top'
                      elsif block.settings.alignment contains 'middle'
                        assign vertical_alignment = 'u-flex--middle'
                      elsif block.settings.alignment contains 'bottom'
                        assign vertical_alignment = 'u-flex--bottom'
                      endif

                      assign horizontal_alignment = 'u-flex--center'
                      if block.settings.alignment contains 'left'
                        assign horizontal_alignment = 'u-flex--left'
                      elsif block.settings.alignment contains 'center'
                        assign horizontal_alignment = 'u-flex--center'
                      elsif block.settings.alignment contains 'right'
                        assign horizontal_alignment = 'u-flex--end'
                      endif
                    -%}

                    <div
                      class="
                        collection-list__content
                        collection-list__content--{{ block.settings.text_alignment }}
                        collection-list__content--{{ section.settings.title_size }}
                        u-flex
                        {{ horizontal_alignment }}
                        {{ vertical_alignment }}
                      "
                    >
                      <div class="collection-list__content-wrapper">
                        {%- if block.settings.heading != blank -%}
                          <h3 class="collection-list__content-heading{% unless section.settings.visibility_border %} collection-list__content-heading--no-border{% endunless %}">
                            {{ block.settings.heading | escape }}
                          </h3>
                        {%- endif -%}
                        {%- if block.settings.text != blank -%}
                          <div class="collection-list__content-text">{{ block.settings.text | escape }}</div>
                        {%- endif -%}
                        {%- if block.settings.link_text != blank -%}
                          <button
                            href="{{ block.settings.link }}"
                            class="collection-list__content-link {{ block.settings.button_style }}"
                          >
                            {{ block.settings.link_text | escape }}
                          </button>
                        {%- endif -%}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {%- if block.settings.link != blank -%}
              </a>
            {%- endif %}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </{{ grid_tag }}>
  </div>

  {%- if show_link -%}
    <div class="section__link section__link--center">
      <a href="{{ section.settings.link }}" class="section__link-link {{ section.settings.section_link_style }}">
        {{- section.settings.link_title | escape -}}
      </a>
    </div>
  {%- endif -%}

  {%- if section.settings.enable_carousel_desktop or section.settings.enable_carousel_mobile or request.design_mode -%}
    <script src="{{ 'items-scroll.js' | asset_url }}" type="module"></script>
  {%- endif -%}
</section>

{% schema %}
{
  "name": "Collection list",
  "class": "js-section__collections-list",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "desc",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Section layout"
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "Show dividing line",
      "default": false
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading and text position",
      "default": "center",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        }
      ]
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Width",
      "default": "large",
      "options": [
        {
          "label": "Default",
          "value": "large"
        },
        {
          "label": "Narrow",
          "value": "small"
        },
        {
          "label": "Wide",
          "value": "wide"
        },
        {
          "label": "Full width",
          "value": "full"
        }
      ]
    },
    {
      "type": "range",
      "id": "grid",
      "label": "Collections per row (desktop)",
      "min": 1,
      "max": 4,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "spacing",
      "label": "Collection padding",
      "min": 0,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "checkbox",
      "id": "enable_carousel_desktop",
      "label": "Enable carousel on desktop",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_carousel_mobile",
      "label": "Enable carousel on mobile",
      "default": true
    },
    {
      "type": "header",
      "content": "Content design"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Heading size",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Image ratio",
      "default": "3:4",
      "options": [
        {
          "value": "1:1",
          "label": "Square (1:1)"
        },
        {
          "value": "3:4",
          "label": "Portrait (3:4)"
        },
        {
          "value": "4:3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "16:9",
          "label": "Wide (16:9)"
        },
        {
          "value": "2:3",
          "label": "Tall (2:3)"
        },
        {
          "value": "natural",
          "label": "Natural"
        }
      ]
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button style",
      "default": "c-btn c-btn--hollow",
      "options": [
        {
          "value": "link--underline",
          "label": "Body text"
        },
        {
          "value": "link link--arrow",
          "label": "Chevron"
        },
        {
          "value": "c-btn c-btn--primary",
          "label": "Solid Button (brand)"
        },
        {
          "value": "c-btn c-btn--mono",
          "label": "Solid button (mono)"
        },
        {
          "value": "c-btn c-btn--hollow",
          "label": "Outline button"
        }
      ]
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Text position",
      "default": "middle-center",
      "options": [
        {
          "value": "middle-left",
          "label": "Left"
        },
        {
          "value": "middle-center",
          "label": "Center"
        },
        {
          "value": "middle-right",
          "label": "Right"
        },
        {
          "value": "top-left",
          "label": "Top left"
        },
        {
          "value": "top-center",
          "label": "Top center"
        },
        {
          "value": "top-right",
          "label": "Top right"
        },
        {
          "value": "bottom-left",
          "label": "Bottom left"
        },
        {
          "value": "bottom-center",
          "label": "Bottom center"
        },
        {
          "value": "bottom-right",
          "label": "Bottom right"
        }
      ]
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "center",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "header",
      "content": "Content visibility"
    },
    {
      "type": "checkbox",
      "id": "visibility_heading",
      "label": "Show collection heading",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "visibility_border",
      "label": "Show brand border",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "visibility_count",
      "label": "Show product count",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "visibility_description",
      "label": "Show collection description",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "visibility_button",
      "label": "Show button",
      "default": true
    },
    {
      "type": "select",
      "id": "hover_options",
      "label": "Display on hover (desktop)",
      "default": "hover-button",
      "options": [
        {
          "value": "hover-off",
          "label": "Off"
        },
        {
          "value": "hover-all",
          "label": "All content"
        },
        {
          "value": "hover-button",
          "label": "Buttons"
        }
      ]
    },
    {
      "type": "header",
      "content": "Content color"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "color_overlay",
      "label": "Overlay color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "color_overlay_strength",
      "label": "Overlay strength",
      "unit": "%",
      "min": 0,
      "max": 100,
      "step": 10,
      "default": 10
    },
    {
      "type": "checkbox",
      "id": "color_default_heading",
      "label": "Use default heading color",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "color_default_border",
      "label": "Use default brand border color",
      "default": true
    },
    {
      "type": "header",
      "content": "Section link"
    },
    {
      "type": "text",
      "id": "link_title",
      "label": "Section link label",
      "default": "View all"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Section link"
    },
    {
      "type": "select",
      "id": "section_link_style",
      "label": "Section link style",
      "default": "link link--arrow",
      "options": [
        {
          "value": "link--underline",
          "label": "Body text"
        },
        {
          "value": "link link--arrow",
          "label": "Chevron"
        },
        {
          "value": "c-btn c-btn--primary",
          "label": "Solid Button"
        },
        {
          "value": "c-btn c-btn--hollow",
          "label": "Outline button"
        }
      ]
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "label": "Collection",
          "id": "collection",
          "type": "collection"
        },
        {
          "type": "header",
          "content": "Replacement content",
          "info": "You can use the following fields to override the default collection content."
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Wallpaper video"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text promo",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Text promo"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Use these text blocks to promote seasonal sales or store events</p>"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "c-btn c-btn--hollow",
          "options": [
            {
              "value": "link--underline",
              "label": "Body text"
            },
            {
              "value": "link link--arrow",
              "label": "Chevron"
            },
            {
              "value": "c-btn c-btn--primary",
              "label": "Solid Button (brand)"
            },
            {
              "value": "c-btn c-btn--mono",
              "label": "Solid button (mono)"
            },
            {
              "value": "c-btn c-btn--hollow",
              "label": "Outline button"
            }
          ]
        },
        {
          "type": "header",
          "content": "Layout"
        },
        {
          "type": "select",
          "id": "alignment",
          "label": "Text position",
          "default": "bottom-left",
          "options": [
            {
              "value": "middle-left",
              "label": "Left"
            },
            {
              "value": "middle-center",
              "label": "Center"
            },
            {
              "value": "middle-right",
              "label": "Right"
            },
            {
              "value": "top-left",
              "label": "Top left"
            },
            {
              "value": "top-center",
              "label": "Top center"
            },
            {
              "value": "top-right",
              "label": "Top right"
            },
            {
              "value": "bottom-left",
              "label": "Bottom left"
            },
            {
              "value": "bottom-center",
              "label": "Bottom center"
            },
            {
              "value": "bottom-right",
              "label": "Bottom right"
            }
          ]
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "default": "left",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ]
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "color_text",
          "label": "Text color",
          "default": "#111111"
        },
        {
          "type": "color",
          "id": "color_bg",
          "label": "Background color",
          "default": "#f0f0f0"
        },
        {
          "type": "checkbox",
          "id": "color_default_heading",
          "label": "Use default heading color",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "color_default_border",
          "label": "Use default brand border color",
          "default": false
        },
        {
          "type": "header",
          "content": "Patterns"
        },
        {
          "type": "select",
          "id": "pattern_style",
          "label": "Pattern style",
          "options": [
            {
              "value": "none",
              "label": "none"
            },
            {
              "value": "4-point-stars",
              "label": "4 point stars"
            },
            {
              "value": "architect",
              "label": "architect"
            },
            {
              "value": "autumn",
              "label": "autumn"
            },
            {
              "value": "bamboo",
              "label": "bamboo"
            },
            {
              "value": "bank-note",
              "label": "bank note"
            },
            {
              "value": "bubbles",
              "label": "bubbles"
            },
            {
              "value": "cage",
              "label": "cage"
            },
            {
              "value": "charlie-brown",
              "label": "charlie brown"
            },
            {
              "value": "diagonal-lines",
              "label": "diagonal lines"
            },
            {
              "value": "diagonal-stripes",
              "label": "diagonal stripes"
            },
            {
              "value": "falling-triangles",
              "label": "falling triangles"
            },
            {
              "value": "formal-invitation",
              "label": "formal invitation"
            },
            {
              "value": "heavy-rain",
              "label": "heavy rain"
            },
            {
              "value": "hexagons",
              "label": "hexagons"
            },
            {
              "value": "hideout",
              "label": "hideout"
            },
            {
              "value": "i-like-food",
              "label": "I like food"
            },
            {
              "value": "overlapping-circles",
              "label": "overlapping circles"
            },
            {
              "value": "plus",
              "label": "plus"
            },
            {
              "value": "polka-dots",
              "label": "polka dots"
            },
            {
              "value": "rain",
              "label": "rain"
            },
            {
              "value": "random-shapes",
              "label": "random shapes"
            },
            {
              "value": "squares",
              "label": "squares"
            },
            {
              "value": "texture",
              "label": "texture"
            },
            {
              "value": "tic-tac-toe",
              "label": "tic-tac-toe"
            },
            {
              "value": "tiny-checkers",
              "label": "tiny checkers"
            },
            {
              "value": "topography",
              "label": "topography"
            },
            {
              "value": "wiggle",
              "label": "wiggle"
            },
            {
              "value": "yyy",
              "label": "yyy"
            },
            {
              "value": "zig-zag",
              "label": "zig zag"
            }
          ],
          "default": "none"
        },
        {
          "type": "color",
          "id": "color_pattern",
          "label": "Pattern color",
          "default": "#212121"
        },
        {
          "type": "range",
          "id": "pattern_size",
          "label": "Pattern size",
          "min": 1,
          "max": 100,
          "step": 1,
          "default": 20
        },
        {
          "type": "range",
          "id": "pattern_opacity",
          "label": "Pattern opacity",
          "unit": "%",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 20
        }
      ]
    },
    {
      "type": "media",
      "name": "Media promo",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Media promo"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Text",
          "default": "Create a promotion by adding an image or wallpaper video here"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "c-btn c-btn--hollow",
          "options": [
            {
              "value": "link--underline",
              "label": "Body text"
            },
            {
              "value": "link link--arrow",
              "label": "Chevron"
            },
            {
              "value": "c-btn c-btn--primary",
              "label": "Solid Button (brand)"
            },
            {
              "value": "c-btn c-btn--mono",
              "label": "Solid button (mono)"
            },
            {
              "value": "c-btn c-btn--hollow",
              "label": "Outline button"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Wallpaper video"
        },
        {
          "type": "header",
          "content": "Layout"
        },
        {
          "type": "select",
          "id": "alignment",
          "label": "Text position",
          "default": "bottom-left",
          "options": [
            {
              "value": "middle-left",
              "label": "Left"
            },
            {
              "value": "middle-center",
              "label": "Center"
            },
            {
              "value": "middle-right",
              "label": "Right"
            },
            {
              "value": "top-left",
              "label": "Top left"
            },
            {
              "value": "top-center",
              "label": "Top center"
            },
            {
              "value": "top-right",
              "label": "Top right"
            },
            {
              "value": "bottom-left",
              "label": "Bottom left"
            },
            {
              "value": "bottom-center",
              "label": "Bottom center"
            },
            {
              "value": "bottom-right",
              "label": "Bottom right"
            }
          ]
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "default": "left",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ]
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "color_text",
          "label": "Text color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "color_overlay",
          "label": "Overlay color",
          "default": "#000000"
        },
        {
          "type": "range",
          "id": "color_overlay_strength",
          "label": "Overlay strength",
          "unit": "%",
          "min": 0,
          "max": 100,
          "step": 10,
          "default": 20
        },
        {
          "type": "checkbox",
          "id": "color_default_heading",
          "label": "Use default heading color",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "color_default_border",
          "label": "Use default brand border color",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection list",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": [
      "404",
      "article",
      "blog",
      "cart",
      "collection",
      "index",
      "list-collections",
      "page",
      "product",
      "search"
    ],
    "groups": ["footer"]
  }
}
{% endschema %}
