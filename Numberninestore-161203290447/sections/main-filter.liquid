{%- liquid
  assign active_values_count = 0

  for filter in collection.filters
    if filter.type == 'price_range'
      if filter.max_value.value != blank or filter.min_value.value != blank
        assign active_values_count = active_values_count | plus: 1
      endif
    else
      assign active_values_count = active_values_count | plus: filter.active_values.size
    endif
  endfor

  if section.settings.quick_links_menu.links.size > 0 or section.settings.show_filters and collection.filters.size > 0
    assign show_filters = true
  else
    assign show_filters = false
  endif

  # First, we retrieve, based on the merchant settings, the user preferences and the available space the most appropriate size
  assign products_mobile_grid_mode = cart.attributes.products_mobile_grid_mode

  if request.design_mode
    # In the theme editor we do not use the choice selected manually, to reduce confusion when changing the theme editor values
    assign products_desktop_grid_mode = section.settings.products_size_desktop
  elsif section.settings.show_grid_mode_selector
    assign products_desktop_grid_mode = cart.attributes.products_desktop_grid_mode | default: section.settings.products_size_desktop
  else
    assign products_desktop_grid_mode = section.settings.products_size_desktop
  endif

  if products_mobile_grid_mode == blank or request.design_mode
    if section.settings.products_per_row_mobile == '1'
      assign products_mobile_grid_mode = 'large'
    else
      assign products_mobile_grid_mode = 'medium'
    endif
  endif
-%}
{% comment %}
  <div class="facets-container padded-side">

  <form
  is="facets-form"

  update-on-change
  section-id="{{ section.id }}"
  method="GET"
  action="{{ request.path }}"
  class="collection_productfilters">
  {%- for filter in collection.filters -%}
  {%- if filter.param_name contains 'product_type' -%}
  {%- for filter_value in filter.values -%}
  <input
  id="{{ filter_value.label }}-{{ filter_value.param_name }}-{{ boolean_index }}"
  type="checkbox"
  name="{{ filter_value.param_name }}"
  value="{{ filter_value.value }}"
  {% if filter_value.active %}
  checked{% endif %}>

  <label for="{{ filter_value.label }}-{{ filter_value.param_name }}-{{ boolean_index }}" class="text-subdued">{{ filter_value.label }}</label>

  {%- endfor -%}
  {%- endif -%}
  {%- endfor -%}

  </form>
  </div>
{% endcomment %}
<height-observer variable="collection-toolbar" class="collection-toolbar full-bleed">
  <div class="collection-toolbar__button-list">

    <div class="collection-toolbar__button-container">
      <button
        type="button"
        aria-controls="facets-drawer"
        class="toggle__filters collection-toolbar__button heading">
        {%- render 'icon' with 'filter' -%}
        Vis Filtre
      </button>

      <collection-horionztal-filters>

        {%- render 'facets'
          , results: collection
          , show_filters: true
          , open_filters_by_default: section.settings.open_filters_by_default
          , update_on_change: true
          , quick_links_menu: section.settings.quick_links_menu
          , context: 'sidebar' -%}
      </collection-horionztal-filters>

      <facets-drawer id="facets-drawer" class="facets-drawer drawer drawer--sm color-scheme color-scheme--dialog {% if section.settings.filter_layout == 'sidebar' %}md:hidden{% endif %}">
        <p class="h4" slot="header">{{ 'collection.faceting.filters' | t }}</p>

        {%- render 'facets'
          , results: collection
          , show_filters: true
          , open_filters_by_default: section.settings.open_filters_by_default
          , update_on_change: false
          , quick_links_menu: section.settings.quick_links_menu
          , context: 'drawer' -%}

        <div slot="footer">
          {%- assign button_content = 'collection.faceting.apply_filters' | t -%}
          {%- render 'button'
            , type: 'button'
            , content: button_content
            , stretch: true
            , is: 'dialog-close-button' -%}
        </div>
      </facets-drawer>
    </div>


    {%- assign selected_sort_by_value = collection.sort_by | default: collection.default_sort_by -%}

    <div class="collection-toolbar__button-container">
      <button
        type="button"
        aria-controls="sort-by-popover"
        class="sort-by-popover collection-toolbar__button heading text-xxs w-full">
        <span class="text-with-icon justify-center">
          {{- 'collection.faceting.sort_by' | t -}}
          {%- render 'icon' with 'chevron-down' -%}
        </span>
      </button>

      <facets-sort-popover
        id="sort-by-popover"
        section-id="{{ section.id }}"
        class="popover popover--bottom-end color-scheme color-scheme--dialog"
        close-on-listbox-select>
        <p class="h4" slot="header">{{ 'collection.faceting.sort_by' | t }}</p>

        <x-listbox class="popover__value-list">
          {%- for sort_option in collection.sort_options -%}
            {%- if sort_option.name != blank -%}
              <button
                type="button"
                class="popover-listbox__option group"
                role="option"
                value="{{ sort_option.value }}"
                {% if sort_option.value == selected_sort_by_value %}
                aria-selected="true"
                {% endif %}>
                <span class="reversed-link">{{ sort_option.name }}</span>
              </button>
            {%- endif -%}
          {%- endfor -%}
        </x-listbox>
      </facets-sort-popover>
    </div>

  </div>

  {%- if section.settings.show_results_count -%}
    <p class="collection-toolbar__products-count text-subdued md-max:hidden">
      {{ 'collection.products_count' | t: count: collection.products_count }}
    </p>
  {%- endif -%}

  {%- if section.settings.show_grid_mode_selector -%}
    <collection-layout-switch
      device="mobile"
      class="collection-toolbar__layout-switch-list sm:hidden"
      aria-controls="product-list-{{ section.id }}">
      <button
        type="button"
        value="large"
        class="collection-toolbar__button {% if products_mobile_grid_mode == 'large' %}is-active{% endif %}"
        aria-label="Switch to larger product images">{%- render 'icon' with 'collection-layout-1' -%}</button>
      <button
        type="button"
        value="medium"
        class="collection-toolbar__button {% if products_mobile_grid_mode == 'medium' %}is-active{% endif %}"
        aria-label="Switch to smaller product images">{%- render 'icon' with 'collection-layout-2' -%}</button>
    </collection-layout-switch>

    <collection-layout-switch
      device="desktop"
      class="collection-toolbar__layout-switch-list sm-max:hidden"
      aria-controls="product-list-{{ section.id }}">
      <button
        type="button"
        value="large"
        class="collection-toolbar__button {% if products_desktop_grid_mode == 'large' %}is-active{% endif %}"
        aria-label="Switch to larger product images">{%- render 'icon' with 'collection-layout-2' -%}</button>
      <button
        type="button"
        value="medium"
        class="collection-toolbar__button {% if products_desktop_grid_mode == 'medium' %}is-active{% endif %}"
        aria-label="Switch to smaller product images">{%- render 'icon' with 'collection-layout-3' -%}</button>
      <button
        type="button"
        value="compact"
        class="collection-toolbar__button {% if products_desktop_grid_mode == 'compact' %}is-active{% endif %}"
        aria-label="Switch to compact product images">{%- render 'icon' with 'collection-layout-4' -%}</button>
    </collection-layout-switch>
  {%- endif -%}


{% comment %}<div{% endcomment %}
</height-observer>


<style>
  .dot-checkbox:checked {
    background: url('{{ 'checkmark_black.svg' | asset_url }}');
  }

  .facets-container::before,
  .facets-container::after {
    content: url('{{ 'arrow.svg' | asset_url }}');
    display: flex;
    padding-left: 10px;
    padding-right: 10px;
    align-items: center;
  }

  .facets-container::before {
    transform: rotate(180deg)
  }

</style>

<script>
  function toggleFilters() {
    const DrawerFilter = document.querySelector('.Drawer__Filters');
        DrawerFilter.classList.toggle('active');
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", (event) => {
    document.querySelectorAll('.accordion__toggle').forEach(item => {
      item.addEventListener('click', () => {
        console.log('item',item);
        if (item.closest('[data-filter-item]').hasAttribute('open')) {
            return;
        } else {
            document.querySelectorAll('[data-filter-item]').forEach(item => {
            item.removeAttribute('open');
        })
  }
      })
      })

     document.onclick = (e) => {
       if (!e.target.closest('[data-filter-item]')) {
        document.querySelectorAll('[data-filter-item]').forEach(item => {
            item.removeAttribute('open')
        })
       }
     } 


    })



</script>

{% schema %}
  {
    "name": "Filtering",
    "class": "main-filtering",
    "presets": [
      {
        "name": "Filtering"
      }
    ]
  }
{% endschema %}