{%- render 'section-spacing-collapsing' -%}

{%- assign text_position = section.settings.text_position -%}
{%- assign values_column_count = 1 -%}{%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  CSS
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}{%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  LIQUID
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}<style>
#shopify-section-{{ section.id }}{
  --feature-chart-values-columns-count: {{ values_column_count }}
  ;
}

.section-stack--col {
  flex-direction: column;
}
.section-stack--col > div {
  width: 100%;
}

@media screen and (min-width: 700px) {
  .shopify-section--feature-chart .section-stack {
    display: flex;
  }
  {%- if text_position == 'center' -%}
    #shopify-section-{{ section.id }}.section-stack__main {
      width: {% if values_column_count == 1 %}
        680px{% else %}
        auto{% endif %};
      min-width: 680px;
    }
  {%- else -%}
    #shopify-section-{{ section.id }}.section-stack {
      flex-wrap: wrap;
      justify-content: start;
    }

    #shopify-section-{{ section.id }}.section-stack__intro {
      flex: 1 0 350px; /* Allow to grow and shrink with a range from 350px to 750px */
      max-width: 750px;
      width: auto;
    }

    #shopify-section-{{ section.id }}.section-stack__main {
      flex: 1 1{% if values_column_count == 1 %}600px{% else %}
      auto{% endif %};
    min-width: 450px;
    width: auto;
  }
{%- endif -%}
}
</style>
  <div {% render 'section-properties' %}{%- if request.page_type == 'product' -%}id="{{section.settings.section-id}}"{%- endif -%}> <div class="section-stack {% if text_position != 'center' %}section-stack--horizontal{% else %}section-stack--center{% endif %} {% if text_position == 'end' %}section-stack--reverse{% endif %}{% unless section.settings.full_width %}section-stack--col{% endunless %}">
    {%- if section.settings.subheading != blank or section.settings.title != blank or section.settings.content != blank or section.settings.button_text != blank -%}
      <div class="section-stack__intro section-custom__info">
        <div class="prose {% if text_position == 'center' %}text-center{% endif %}">
          {%- if section.settings.subheading != blank -%}
            <p class="bold">{{ section.settings.subheading | escape }}</p>
          {%- endif -%}

          {%- if section.settings.title != blank -%}
            <h2 class="h2">
              {%- render 'styled-text', content: section.settings.title, text_color: section.settings.heading_color, gradient: section.settings.heading_gradient -%}
            </h2>
          {%- endif -%}

          {{- section.settings.content -}}

          {%- if section.settings.button_text != blank -%}
            {%- render 'button', size: 'lg', href: section.settings.button_url, content: section.settings.button_text, background: section.settings.button_background, text_color: section.settings.button_text_color -%}
          {%- endif -%}
        </div>
      </div>
    {%- endif -%}

    <div class="section-stack__main">
      {%- assign text_color = section.settings.chart_text_color | default: settings.text_color -%}
      {%- assign background_color = section.settings.chart_background -%}

      {%- if background_color == blank or background_color == 'rgba(0,0,0,0)' -%}
        {%- assign background_color = settings.background | color_mix: text_color, 95 -%}
      {%- endif -%}

      <feature-chart max-rows="{{ section.settings.max_rows }}" {% render 'surface', class: 'feature-chart', background: background_color, text_color: text_color %}>
        {%- assign has_product = false -%}

        {%- for block in section.blocks -%}
          {%- if block.type == 'values' and block.settings.product != blank -%}
            {%- assign has_product = true -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}

        <div class="feature-chart__table {% if values_column_count > 1 %}feature-chart__table--multi-columns{% endif %} {% if has_product %}feature-chart__table--product{% endif %} divide-y scroll-area">
          {%- assign values_blocks = section.blocks | where: 'type', 'values' -%}
          {%- assign outputted_count = 0 -%}
          {%- assign total_rows_count = 0 -%}

            {%- for i in (1..20) -%}
            {%- assign heading_key = 'heading_' | append: i -%}
            {%- assign value_key = 'value_' | append: i -%}

            {%- assign heading_value = headings_block.settings[heading_key] -%}

            {%- comment -%}We only output the line if at least one value is defined{%- endcomment -%}
            {%- if heading_value != blank and values_blocks[0].settings[value_key] != blank or values_blocks[1].settings[value_key] != blank or values_blocks[2].settings[value_key] != blank -%}
              {%- assign total_rows_count = total_rows_count | plus: 1 -%}
            {%- endif -%}
          {%- endfor -%}

          {%- comment -%}We need to create a first row for the products if any{%- endcomment -%}



          {%- comment -%}We only output the line if at least one value is defined{%- endcomment -%}
         
          {%- comment -%}MCB - THK{%- endcomment -%}
          {% assign pim-headings = product.metafields.custom.type.value.specs.value %} 
          {% assign pim-values = product.metafields.custom.features_values.value %}
          {%- assign size = pim-headings.size -%}
            {%- for i in (1..size) -%}
            {%- assign outputted_count = outputted_count | plus: 1 -%}
            {%- if product.metafields.custom.features_values != blank -%}
              <div class="feature-chart__table-row-custom"> 
               <div class="feature-chart__table-row-custom__inner">
                {% for pim-heading in pim-headings %}
                  {%- if forloop.index == i -%}
                    <div class="feature-chart__heading bold">{{ pim-heading }}</div>
                  {%- endif -%}
                {% endfor %}
             
             
                {% for pim-value in pim-values %}
                  {%- if forloop.index == i -%}
                    <div class="feature-chart__value text-subdued">
                      <p>{{ pim-value }}</p>
                    </div>
                  {%- endif -%}
                {% endfor %}
                </div>

              </div>
            {%- endif -%}
          {% endfor %}
        </div>

        {%- if outputted_count > section.settings.max_rows -%}
          <div class="moreless-button">
            <button class="text-with-icon group">
              <span class="product-feature-chart__toggle-text">{{- section.settings.view_all_text | escape -}}</span>
              <span class="circle-chevron">{%- render 'icon' with 'chevron-bottom-small' -%}</span>
            </button>
          </div> 
        {%- endif -%}
      </feature-chart>

    </div>
  </div>
</div>



{% schema %}
  {
    "name": "Feature chart - MCB",
    "class": "shopify-section--feature-chart",
    "tag": "section",
    "disabled_on": {
      "groups": ["header", "custom.overlay"]
    },
    "settings": [
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full width"

      },
      {
        "type": "text",
        "id": "section-id",
        "label": "Section ID",
        "info": "Only for product page"
      },
      {
        "type": "header",
        "content": "Content"
      },
      {
        "type": "text",
        "id": "subheading",
        "label": "Subheading",
        "default": "Compare"
      }, {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Product specification"
      }, {
        "type": "richtext",
        "id": "content",
        "label": "Content",
        "default": "<p>Give your customers useful information about your products and showcase differences between them.</p>"
      }, {
        "type": "text",
        "id": "button_text",
        "label": "Button text"
      }, {
        "type": "url",
        "id": "button_url",
        "label": "Button URL"
      }, {
        "type": "select",
        "id": "text_position",
        "label": "Text position",
        "options": [
          {
            "value": "start",
            "label": "Left"
          }, {
            "value": "center",
            "label": "Center"
          }
        ],
        "default": "start"
      }, {
        "type": "header",
        "content": "Chart"
      }, {
        "type": "range",
        "id": "max_rows",
        "min": 1,
        "max": 20,
        "label": "Rows revealed by default",
        "default": 5
      }, {
        "type": "text",
        "id": "view_all_text",
        "label": "View all text",
        "default": "View all"
      }, {
        "type": "text",
        "id": "view_less_text",
        "label": "View less text",
        "default": "View less"
      }, {
        "type": "text",
        "id": "view_product",
        "label": "View product button text",
        "default": "View"
      }, {
        "type": "text",
        "id": "viewing_product",
        "label": "Currently viewing product label",
        "info": "Badge added on the product page's main product."
      }, {
        "type": "checkbox",
        "id": "show_product_swatch",
        "label": "Show product swatch",
        "default": true
      }, {
        "type": "header",
        "content": "Colors",
        "info": "Gradient replaces solid colors when set."
      }, {
        "type": "color",
        "id": "background",
        "label": "Background"
      }, {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Background gradient"
      }, {
        "type": "color",
        "id": "text_color",
        "label": "Text"
      }, {
        "type": "color",
        "id": "heading_color",
        "label": "Heading color"
      }, {
        "type": "color_background",
        "id": "heading_gradient",
        "label": "Heading gradient"
      }, {
        "type": "color",
        "id": "button_background",
        "label": "Button background"
      }, {
        "type": "color",
        "id": "button_text_color",
        "label": "Button text"
      }, {
        "type": "color",
        "id": "chart_background",
        "label": "Chart background"
      }, {
        "type": "color",
        "id": "chart_text_color",
        "label": "Chart text"
      }, {
        "type": "color",
        "id": "chart_true_false_color",
        "label": "True/false color"
      }
    ],

    "presets": [
      {
        "name": "Feature chart - MCB"

      }
    ]
  }
{% endschema %}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script>
  
  const scrollToTop = function(){
    let isMobile = window.matchMedia("only screen and (max-width: 699px)").matches;
    if (!isMobile) {
      window.scrollTo({top: 1000, behavior: 'smooth'});
    } else {
      window.scrollTo({top: 1800, behavior: 'smooth'});
    }
  
 
}
  $(document).ready(function() {
    var moretextPim = "{{ section.settings.view_all_text | escape }}";
    var lesstextPim = "{{ section.settings.view_less_text | escape  }}";
    var maxRow = {{section.settings.max_rows}};
    var tableRowNumber = $('.feature-chart__table').find(".feature-chart__table-row-custom").length; 
    var hiddenRowNumberStart = maxRow + 1;
    for (var i = hiddenRowNumberStart; i <= tableRowNumber; i++) {
      $('.feature-chart__table').find(`.feature-chart__table-row-custom:nth-child(${i})`).addClass( "moretext_custom" );
    }
    
    $('.moreless-button').click(function() {

      $('.moretext_custom').slideToggle();
      var myStr = $('.moreless-button .product-feature-chart__toggle-text').text();
      console.log(myStr);
      if (myStr === moretextPim) {
        $('.moreless-button .product-feature-chart__toggle-text').text(lesstextPim)
        $('.moreless-button .icon').css('transform','rotate(180deg)');
      } else {
        $('.moreless-button .product-feature-chart__toggle-text').text(moretextPim);
        $('.moreless-button .icon').css('transform','rotate(0)');
        scrollToTop();
      }
  });
});  

  
</script>