{%- render 'section-spacing-collapsing' -%}

{%- assign text_position = section.settings.text_position -%}
{%- assign values_column_count = section.blocks | where: 'type', 'values' | size -%}

{%- comment -%}
------------------------------------------------------------------------------------------------------------------------
CSS
------------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

<style>
  #shopify-section-{{ section.id }} {
    --feature-chart-values-columns-count: 2;
  }

  @media screen and (min-width: 700px) {
    {%- if text_position == 'center' -%}
      #shopify-section-{{ section.id }} .section-stack__main {
        width: {% if values_column_count == 1 %}680px{% elsif values_column_count == 2 %}900px{% else %}auto{% endif %};
        min-width: 680px;
      }
    {%- else -%}
      #shopify-section-{{ section.id }} .section-stack {
        flex-wrap: wrap;
        justify-content: start;
      }

      #shopify-section-{{ section.id }} .section-stack__intro {
        flex: 1 0 350px; /* Allow to grow and shrink with a range from 350px to 750px */
        max-width: 750px;
        width: auto;
        max-width: 820px;
      }

      #shopify-section-{{ section.id }} .section-stack__main {
        flex: 1 1 {% if values_column_count == 1 %}600px{% elsif values_column_count == 2 %}900px{% else %}auto{% endif %};
        min-width: 450px;
        width: auto;
      max-width: 820px;
      }
    {%- endif -%}
  }
</style>

{%- comment -%}
------------------------------------------------------------------------------------------------------------------------
LIQUID
------------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

<div {% render 'section-properties' %}{%- if request.page_type == 'product' -%} id="{{section.settings.section-id}}"{%- endif -%}>
  <div class="section-stack {% if text_position != 'center' %}section-stack--horizontal{% else %}section-stack--center{% endif %} {% if text_position == 'end' %}section-stack--reverse{% endif %}">
    {%- if section.settings.subheading != blank or section.settings.title != blank or section.settings.content != blank or section.settings.button_text != blank -%}
      <div class="section-stack__intro">
        <div class="prose {% if text_position == 'center' %}text-center{% endif %}">
          {%- if section.settings.subheading != blank -%}
            <p class="bold">{{ section.settings.subheading | escape }}</p>
          {%- endif -%}

          {%- if section.settings.title != blank -%}
            <h2 class="h2">
              {%- render 'styled-text', content: section.settings.title, text_color: section.settings.heading_color, gradient: section.settings.heading_gradient -%}
            </h2>
          {%- endif -%}

          {%- if section.settings.show_product_desc  -%}
          {{- product.description -}}
          {%- else -%}
            {{- section.settings.content -}}
          {%- endif -%}
         

          {%- if section.settings.button_text != blank -%}
            {%- render 'button', size: 'lg', href: section.settings.button_url, content: section.settings.button_text, background: section.settings.button_background, text_color: section.settings.button_text_color -%}
          {%- endif -%}

          {%- if section.settings.button_text_2 != blank -%}
              {%- render 'button', size: 'lg', href: section.settings.button_url_2, content: section.settings.button_text_2, background: section.settings.button_background, text_color: section.settings.button_text_color -%}
            {%- endif -%}
      
        </div>
      </div>
    {%- endif -%}

    <div class="section-stack__main">
      {%- assign text_color = section.settings.chart_text_color | default: settings.text_color -%}
      {%- assign background_color = section.settings.chart_background -%}

      {%- if background_color == blank or background_color == 'rgba(0,0,0,0)' -%}
      {%- assign background_color = settings.background | color_mix: text_color, 95 -%}
    {%- endif -%}

      <feature-chart max-rows="{{ section.settings.max_rows }}" {% render 'surface', class: 'feature-chart', background: background_color, text_color: text_color %}>

        <div class="feature-chart__table feature-chart__table_pim divide-y scroll-area">
         
        
          {%- for i in (1..20) -%}
          {%- for block in section.blocks -%}
            {%- case block.type -%}
            {%- when 'pim' -%}
              {%- if forloop.index == i -%}
              
                {% if block.settings.pim_value != blank %}
                  <div class="feature-chart__table-row-custom {{i}}{% if i > section.settings.max_rows %} moretext_custom{% endif %}" > 
                    <div class="feature-chart__table-row__inner">
                      <div class="feature-chart__heading bold">{{ block.settings.title }}</div>
                      <div class="feature-chart__value text-subdued">{{ block.settings.pim_value }}</div>  
                    </div>                 
                  </div>
                {%- endif -%}
              {%- endif -%}
                {%- when 'sku' -%}
                  {%- if forloop.index == i -%}
                  {% if product.selected_or_first_available_variant.sku != blank %}
                    <div class="feature-chart__table-row-custom {{i}}{% if i > section.settings.max_rows %} moretext_custom{% endif %}" > 
                      <div class="feature-chart__table-row__inner">
                        <div class="feature-chart__heading bold">{{ block.settings.title }}</div>
                        <div class="feature-chart__value text-subdued custom-variant">
                          {{ product.selected_or_first_available_variant.sku -}}
                         </div>  
                      </div>                 
                    </div>
                {%- endif -%}
              {%- endif -%}
              {%- when 'weight' -%}
                {%- if forloop.index == i -%}
                  {% if product.variants.first.weight  != blank %}
                    <div class="feature-chart__table-row-custom {{i}}{% if i > section.settings.max_rows %} moretext_custom{% endif %}" > 
                      <div class="feature-chart__table-row__inner">
                        <div class="feature-chart__heading bold">{{ block.settings.title }}</div>
                        <div class="feature-chart__value text-subdued"> {{ product.variants.first.weight | weight_with_unit }}</div>  
                      </div>                 
                    </div>
                {%- endif -%}
              {%- endif -%}
           {%- endcase -%}
            
     
        {%- endfor -%}
        {%- endfor -%}
      
        </div>

          <div class="pim-chart__toggle">
            <button class="text-with-icon group">
              <span class="feature-chart__toggle-text reversed-link">{{- section.settings.view_all_text | escape -}}</span>
              <span class="circle-chevron group-hover:colors">{%- render 'icon' with 'chevron-bottom-small' -%}</span>
            </button>
          </div>
      
      </feature-chart>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Product specs - MCB",
  "class": "shopify-section--feature-chart",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": true
    },
     {
      "type": "text",
      "id": "section-id",
      "label": "Section ID",
      "info":"Only for product page"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Compare"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Product specification"
    },
    {
      "type": "checkbox",
      "id": "show_product_desc",
      "label": "Show product description",
      "default": true,
      "info":"If enabled, product description will override the Content field"
    },
   
    {
      "type": "richtext",
      "id": "content",
      "label": "Content",
      "default": "<p>Give your customers useful information about your products and showcase differences between them.</p>"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text 1"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "Button URL 1"
    },
    {
      "type": "text",
      "id": "button_text_2",
      "label": "Button text 2"
    },
    {
      "type": "url",
      "id": "button_url_2",
      "label": "Button URL 2"
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text position",
      "options": [
        {
          "value": "start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "start"
    },
    {
      "type": "header",
      "content": "Chart"
    },
    {
      "type": "range",
      "id": "max_rows",
      "min": 1,
      "max": 20,
      "label": "Rows revealed by default",
      "default": 5
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View all text",
      "default": "View all"
    },
    {
      "type": "text",
      "id": "view_less_text",
      "label": "View less text",
      "default": "View less"
    },
    {
      "type": "text",
      "id": "view_product",
      "label": "View product button text",
      "default": "View"
    },
    {
      "type": "text",
      "id": "viewing_product",
      "label": "Currently viewing product label",
      "info": "Badge added on the product page's main product."
    },
    {
      "type": "checkbox",
      "id": "show_product_swatch",
      "label": "Show product swatch",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors",
      "info": "Gradient replaces solid colors when set."
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color"
    },
    {
      "type": "color_background",
      "id": "heading_gradient",
      "label": "Heading gradient"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text"
    },
    {
      "type": "color",
      "id": "chart_background",
      "label": "Chart background"
    },
    {
      "type": "color",
      "id": "chart_text_color",
      "label": "Chart text"
    },
    {
      "type": "color",
      "id": "chart_true_false_color",
      "label": "True/false color"
    }
    
  ],
  "blocks": [
    {
        "type": "pim",
        "name": "Product info",
        "settings": [
        
        {
          "type": "text",
          "id": "title",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "pim_value",
          "label": "Value"
        }
 
      ]
    },
    {
        "type": "sku",
        "name": "SKU",
        "limit": 1,
        "settings": [
        
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "info":"Dynamically fetched from produkt data - only heading is changeable in this block"
        }
        
 
      ]
    },
    {
        "type": "weight",
        "name": "Weight",
        "limit": 1,
        "settings": [
        
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "info":"Dynamically fetched from produkt data - only heading is changeable in this block"
        }
        
 
      ]
    }
   
  ],
  "presets": [
    {
      "name": "Product specs - MCB"
 
    }
  ]
}
{% endschema %}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script>
  $(document).ready(function() {
    var moretextPim = "{{ section.settings.view_all_text | escape }}";
    var lesstextPim = "{{ section.settings.view_less_text | escape  }}";
    var maxRow = {{section.settings.max_rows}};
    var tableRowNumber = $('.feature-chart__table_pim').find(".feature-chart__table-row-custom").length; 
    console.log("khoi" + maxRow + tableRowNumber );
    if(tableRowNumber > maxRow ){
      $('.pim-chart__toggle').css( 'display','flex' );
    }

    if($.trim($('.feature-chart__table_pim').html())==''){
      $('.feature-chart__table_pim').closest( '.feature-chart' ).hide();
    }
    $('.pim-chart__toggle').click(function() {
      $('.moretext_custom').slideToggle();

      var myStr = $('.pim-chart__toggle .feature-chart__toggle-text').text();
      if (myStr === moretextPim) {
        $('.pim-chart__toggle .feature-chart__toggle-text').text(lesstextPim)
        $('.pim-chart__toggle .icon').css('transform','rotate(180deg)');
        console.log("thanh" + lesstextPim);
      } else {
        $('.pim-chart__toggle .feature-chart__toggle-text').text(moretextPim);
        $('.pim-chart__toggle .icon').css('transform','rotate(0)');
      }
    });
  });  
</script>